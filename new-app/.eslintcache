[{"D:\\J\\ATTAINU\\INTERNSHIP PROJECT\\Internship-asg\\new-app\\src\\index.js":"1","D:\\J\\ATTAINU\\INTERNSHIP PROJECT\\Internship-asg\\new-app\\src\\Components\\routing.js":"2","D:\\J\\ATTAINU\\INTERNSHIP PROJECT\\Internship-asg\\new-app\\src\\Components\\usersdata\\Registerform.js":"3","D:\\J\\ATTAINU\\INTERNSHIP PROJECT\\Internship-asg\\new-app\\src\\Components\\usersdata\\Viewusers.js":"4","D:\\J\\ATTAINU\\INTERNSHIP PROJECT\\Internship-asg\\new-app\\src\\Components\\usersdata\\Displayusers.js":"5","D:\\J\\ATTAINU\\INTERNSHIP PROJECT\\Internship-asg\\new-app\\src\\Components\\usersdata\\editform.js":"6","D:\\J\\ATTAINU\\INTERNSHIP PROJECT\\Internship-asg\\new-app\\src\\Components\\usersdata\\Header.js":"7"},{"size":170,"mtime":1611328815910,"results":"8","hashOfConfig":"9"},{"size":629,"mtime":1611391082920,"results":"10","hashOfConfig":"9"},{"size":4042,"mtime":1611902684009,"results":"11","hashOfConfig":"9"},{"size":2187,"mtime":1611902578909,"results":"12","hashOfConfig":"9"},{"size":2715,"mtime":1611901715687,"results":"13","hashOfConfig":"9"},{"size":4650,"mtime":1611901350801,"results":"14","hashOfConfig":"9"},{"size":3819,"mtime":1611871071119,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1kdi46a",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},"D:\\J\\ATTAINU\\INTERNSHIP PROJECT\\Internship-asg\\new-app\\src\\index.js",[],["32","33"],"D:\\J\\ATTAINU\\INTERNSHIP PROJECT\\Internship-asg\\new-app\\src\\Components\\routing.js",[],"D:\\J\\ATTAINU\\INTERNSHIP PROJECT\\Internship-asg\\new-app\\src\\Components\\usersdata\\Registerform.js",[],"D:\\J\\ATTAINU\\INTERNSHIP PROJECT\\Internship-asg\\new-app\\src\\Components\\usersdata\\Viewusers.js",[],"D:\\J\\ATTAINU\\INTERNSHIP PROJECT\\Internship-asg\\new-app\\src\\Components\\usersdata\\Displayusers.js",["34"],"D:\\J\\ATTAINU\\INTERNSHIP PROJECT\\Internship-asg\\new-app\\src\\Components\\usersdata\\editform.js",[],"D:\\J\\ATTAINU\\INTERNSHIP PROJECT\\Internship-asg\\new-app\\src\\Components\\usersdata\\Header.js",["35","36","37","38"],"import React,{useState} from 'react'\r\nimport {ReactSearchAutocomplete } from 'react-search-autocomplete'\r\nimport {Link} from 'react-router-dom'\r\nimport Display from './Displayusers'\r\n\r\nconst Header = ({posts,filter}) => {\r\n    const [loading] = useState(false)\r\n\r\n     const [filteredData,setFilterData]=useState()\r\n\r\n    // const renderAllData=()=>{\r\n\r\n    //     setState({filtered:posts})\r\n    //   }\r\n\r\n      \r\n        const handleOnSelect = (item) => {\r\n          let a = []\r\n          a.push(item)\r\n          filter(a)\r\n        }\r\n\r\n  \r\n        const selectedCountry=(e)=>{\r\n          const output = posts.filter((data)=>{\r\n            return ((data.Country) === (e.target.value))})   \r\n            filter(output)\r\n        }\r\n  \r\n        const selectedDate=(e)=>{\r\n          const output = posts.filter((data)=>{\r\n            return ((data[\"Date of birth\"]) === (e.target.value))})   \r\n            filter(output)\r\n        }\r\n  \r\n        const renderCountry=()=>{\r\n          if(posts){\r\n            let country = getUnique('Country')\r\n\r\n            let newcountry =country.sort((a, b) => a.Country.localeCompare(b.Country)) \r\n            return newcountry.map((item)=>{\r\n                return(\r\n                  <option key={item.id} value={item.Country} >{item.Country}</option>\r\n                )\r\n            })\r\n          }\r\n        }\r\n  \r\n        const getUnique=(comp)=>{\r\n          const arr = posts;\r\n          const unique =  arr.map(e => e[comp])\r\n  \r\n                    // store the indexes of the unique objects\r\n                    .map((e, i, final) => final.indexOf(e) === i && i)\r\n  \r\n                    // eliminate the false indexes & return unique objects\r\n                   .filter((e) => arr[e]).map(e => arr[e]);\r\n  \r\n         return unique;\r\n        }\r\n  \r\n        const renderDateOfBirth=()=>{\r\n        \r\n          if(posts){\r\n            let date = getUnique('Date of birth')\r\n          const newdate= date.sort((a, b) => new Date(a[\"Date of birth\"].split('T')[0]) - new Date(b[\"Date of birth\"].split('T')[0]))\r\n            return newdate.map((item)=>{\r\n              return(\r\n                <option key={item.id} value={item[\"Date of birth\"]}>{item[\"Date of birth\"].split('T')[0]}</option>\r\n              )\r\n            })\r\n          }\r\n        }\r\n  \r\n\r\n  return (\r\n      <div>\r\n    <div className='row header'>\r\n        \r\n         <center> \r\n             {/* <div className='col-md-2 main' onClick={renderAllData}><Link><h3>All users</h3></Link></div> */}\r\n          <div className='filter col-md-6'>\r\n            <select onChange={selectedCountry} className='country'>\r\n              <option >---select by country---</option>\r\n              {renderCountry()}\r\n            </select>\r\n            <select onChange={selectedDate}  className='date'>\r\n              <option>---select by Date of birth---</option>\r\n              {renderDateOfBirth()}\r\n            </select>\r\n          </div>\r\n          <div className='col-md-4'>\r\n              <div class='searchbar' >\r\n              <ReactSearchAutocomplete \r\n                items={posts}\r\n                fuseOptions={{ keys: [ \"Full Name\",\"Country\", \"Date of birth\", \"Email\",\"Created at\"] }}           \r\n                resultStringKeyName=\"Full Name\"\r\n                // onSearch={handleOnSearch}\r\n                onSelect={handleOnSelect}\r\n                // onFocus={handleOnFocus}\r\n                placeholder='Search by name'\r\n                autoFocus\r\n              />          \r\n            </div>\r\n            </div>\r\n            <div className='col-md-2 register'>\r\n              <Link to='/register' style={{color:'white'}}>Register</Link>\r\n              </div>\r\n              </center>\r\n        </div>\r\n        {/* <Display posts={filteredData} loading={loading}/> */}\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":12,"column":11,"nodeType":"45","messageId":"46","endLine":12,"endColumn":16},{"ruleId":"43","severity":1,"message":"47","line":4,"column":8,"nodeType":"45","messageId":"46","endLine":4,"endColumn":15},{"ruleId":"43","severity":1,"message":"48","line":7,"column":12,"nodeType":"45","messageId":"46","endLine":7,"endColumn":19},{"ruleId":"43","severity":1,"message":"49","line":9,"column":13,"nodeType":"45","messageId":"46","endLine":9,"endColumn":25},{"ruleId":"43","severity":1,"message":"50","line":9,"column":26,"nodeType":"45","messageId":"46","endLine":9,"endColumn":39},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'datas' is assigned a value but never used.","Identifier","unusedVar","'Display' is defined but never used.","'loading' is assigned a value but never used.","'filteredData' is assigned a value but never used.","'setFilterData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]